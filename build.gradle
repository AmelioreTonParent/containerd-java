plugins {
    id 'java-library'
    // download containerd api files (*.proto)
    id "de.undercouch.download" version "5.3.0"
    // compile proto files to java files
    id "com.google.protobuf" version "0.9.1"
}

repositories {
    mavenCentral()
}

dependencies {
    // https://mvnrepository.com/artifact/com.google.protobuf/protobuf-java
    implementation group: 'com.google.protobuf', name: 'protobuf-java', version: '3.21.11'

    // https://mvnrepository.com/artifact/io.grpc/grpc-all
    implementation group: 'io.grpc', name: 'grpc-all', version: '1.51.0'

    implementation group: 'javax.annotation', name: 'javax.annotation-api', version: '1.3.2'

}

testing {
    suites {
        // Configure the built-in test suite
        test {
            // Use JUnit Jupiter test framework
            useJUnitJupiter('5.8.2')
        }
    }
}

// download proto files for containerd API
task downloadGogoZipFile(type: Download) {
    src 'https://github.com/gogo/protobuf/archive/refs/tags/v1.3.2.zip'
    dest new File(buildDir, 'v1.3.2.zip')
    overwrite false
}
task downloadGogoAndUnzipFile(dependsOn: downloadGogoZipFile, type: Copy) {
    from zipTree(downloadGogoZipFile.dest)
    into buildDir
}
task downloadContainerdZipFile(dependsOn: downloadGogoAndUnzipFile, type: Download) {
    src 'https://github.com/containerd/containerd/archive/refs/heads/release/1.6.zip'
    dest new File(buildDir, '1.6.zip')
    overwrite false
}
task downloadContainerdAndUnzipFile(dependsOn: downloadContainerdZipFile, type: Copy) {
    from(zipTree(downloadContainerdZipFile.dest)) {
        include "**/*.proto"
    }
    into buildDir
}
task cleanupContainerdProto(dependsOn: downloadContainerdAndUnzipFile, type: Copy) {
    from("$buildDir/containerd-release-1.6") {
        include "**/*.proto"
        filter {
            it.replaceAll('gogoproto/', '').replaceAll('github.com/containerd/containerd/api/', '').replaceAll('github.com/containerd/containerd/protobuf/', '')
        }
    }
    into "$buildDir/containerd"
}
tasks.extractProto.dependsOn(tasks.cleanupContainerdProto)

// configure protocol buffer compilation
sourceSets {
    main {
        proto {
            // In addition to the default 'src/main/proto'
            //srcDir 'build/containerdSrc/github.com/containerd/containerd/api/'
            srcDir 'build/protobuf-1.3.2/protobuf'
            srcDir 'build/protobuf-1.3.2/gogoproto'
            srcDir 'build/containerd/protobuf'
            srcDir 'build/containerd/api'
            /*
            In directory build/containerd-release-1.6/api,
            replace "gogoproto/" by nothing ""
            replace "github.com/containerd/containerd/api/" by nothing ""
            replace "github.com/containerd/containerd/protobuf/" by nothing ""
             */
        }
    }
}
protobuf {
    // Configure the protoc executable
    protoc {
        // Download from repositories
        artifact = 'com.google.protobuf:protoc:3.21.11'
    }
    // Locate the codegen plugin
    plugins {
        grpc {
            artifact = 'io.grpc:protoc-gen-grpc-java:1.51.0'
        }
    }
    generateProtoTasks {
        all()*.plugins {
            grpc {}
        }
    }
}